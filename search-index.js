var searchIndex = JSON.parse('{\
"iphlpapi":{"doc":"","t":[0,4,13,13,13,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,0,3,11,11,11,11,0,3,11,11,11,11,3,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ip_adapter_info","AdaperKind","Other","Ethernet","TokenRing","Ppp","Loopback","Atm","IEEE80211","IpAdapterInfo","next","iter","get_combo_index","get_name","get_description","get_address","get_index","get_kind","get_dhcp_enabled","get_current_ip_address","get_ip_address_list","get_gateway_list","get_dhcp_server","get_have_wins","get_primary_wins_server","get_secondary_wins_server","get_lease_obtained","get_lease_expires","Iter","new","ip_adapter_info_list","IpAdapterInfoList","empty","get","is_empty","iter","ip_addr_string","IpAddrString","next","get_address","get_mask","iter","Iter","new","get_adapters_info","send_arp","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","drop","from","next","next","fmt","fmt","fmt","fmt","try_from"],"q":["iphlpapi","iphlpapi::ip_adapter_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iphlpapi","iphlpapi::ip_adapter_info_list","","","","","iphlpapi","iphlpapi::ip_addr_string","","","","","","","iphlpapi","","iphlpapi::ip_adapter_info","","","","","","","","","","","","","","","","","","","","","","iphlpapi::ip_adapter_info_list","","","","","","","iphlpapi::ip_addr_string","","","","","","","","","","","","","","","iphlpapi::ip_adapter_info_list","iphlpapi::ip_addr_string","iphlpapi::ip_adapter_info","iphlpapi::ip_addr_string","iphlpapi::ip_adapter_info","","iphlpapi::ip_adapter_info_list","iphlpapi::ip_addr_string","iphlpapi::ip_adapter_info"],"d":["","The kind of adapter","Some other type of network interface.","An Ethernet network interface.","MIB_IF_TYPE_TOKENRING","A PPP network interface.","A software loopback network interface.","An ATM network interface.","An IEEE 802.11 wireless network interface.","Data about a network adapter","Try to get the next adapter in this linked list.","Iterate over the remaining data in this linked list","Get the combo index. This is reserved.","The GUID name of the adapter","The “friendly” name of the adapter","The Hardware Address","The index. This is not persistent.","Get the adapter kind.","Check if dhcp is enabled for this adapter","Reserved.","A linked list of ip addresses associated with this adapter","A linked list of gateways associated with this adapter","Get the addr of the dhcp server.","Checks whether WINS is enabled","Get the primary wins server.","Get the secondary wins server.","Get the time the DHCP lease was obtained.","Get the time the DHCP lease expires.","","","","A Linked List of <code>IpAdapterInfo</code>s.","Create an empty <code>IpAdapterInfoList</code>.","Try to fetch the <code>IpAdapterInfoList</code> for this computer.","Returns true if empty","Iter over the stored data","","","Try to get the next <code>IpAddrString</code> in this linked list","Get the address","Get the mask","Iter the remaining data in this linked list","","","Get the adapter info for this computer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,0,0,4,4,4,4,0,0,5,5,5,5,0,6,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,4,5,3,6,1,2,4,5,1],"f":[null,null,null,null,null,null,null,null,null,null,[[],["option",4]],[[],["iter",3]],[[],["u32",15]],[[],["cstr",3]],[[],["cstr",3]],[[]],[[],["u32",15]],[[],[["u32",15],["adaperkind",4],["result",4]]],[[],["bool",15]],[[],[["option",4],["ipaddrstring",3]]],[[],["ipaddrstring",3]],[[],["ipaddrstring",3]],[[],[["option",4],["ipaddrstring",3]]],[[],["bool",15]],[[],[["option",4],["ipaddrstring",3]]],[[],[["option",4],["ipaddrstring",3]]],[[],[["option",4],["systemtime",3]]],[[],[["option",4],["systemtime",3]]],null,[[["ipadapterinfo",3],["option",4]]],null,null,[[]],[[],[["result",4],["error",3]]],[[],["bool",15]],[[],["ipadapterinfoiter",3]],null,null,[[],["option",4]],[[],["cstr",3]],[[],["cstr",3]],[[],["iter",3]],null,[[["ipaddrstring",3],["option",4]]],[[],[["result",6],["ipadapterinfolist",3]]],[[["option",4],["ipv4addr",3]],[["ioerror",3],["result",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["ip_addr_string",3]]],[[],["option",4]],[[],["option",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["dword",6]],["result",4]]],"p":[[4,"AdaperKind"],[3,"IpAdapterInfo"],[3,"Iter"],[3,"IpAdapterInfoList"],[3,"IpAddrString"],[3,"Iter"]]}\
}');
initSearch(searchIndex);